productName = "ALCOM"
identifier = "com.anatawa12.vrc-get-gui"

[build]
beforeBuildCommand = "npm run build"
beforeDevCommand = "npm run dev"
devUrl = "http://localhost:3030"
frontendDist = "out"

[bundle]
active = true
targets = [
    "appimage",
    "deb",
    "rpm",
    "nsis", #-setup.exe
    "app", # needs for dmg
    "dmg",
]
longDescription = "ALCOM is a fast and open-source alternative VCC (VRChat Creator Companion) written in rust and tauri."
shortDescription = "ALCOM - Alternative Creator Companion"
category = "DeveloperTool"
copyright = "(c) anatawa12 and other contributors"

externalBin = []
icon = [
    "icons/32x32.png",
    "icons/64x64.png",
    "icons/128x128.png",
    "icons/128x128@2x.png",
    "icons/icon.icns",
    "icons/icon.ico",
]
resources = []
publisher = "anatawa12"

createUpdaterArtifacts = "v1Compatible"  # remove if ci # we do not generate updater artifacts in CI

[[bundle.fileAssociations]]
# note: for macOS we directory use info.plist for registering file association.
description = "ALCOM Project Template"
ext = ['alcomtemplate']
mimeType = "application/x-alcom-template+json"
name = "ALCOM Project Template"

[bundle.linux.deb]
desktopTemplate = "alcom.desktop"

[bundle.linux.rpm]
desktopTemplate = "alcom.desktop"

[bundle.macOS]
exceptionDomain = ""
frameworks = []
providerShortName = "anatawa12"

[bundle.windows]
nsis.template = "installer.nsi"

# signing
certificateThumbprint = "0D17F6395EC64A2B1D341BB7AC5B3163EB148BB7"
timestampUrl = "http://ts.ssl.com"
digestAlgorithm = "sha256"
tsp = true

[plugins.updater]
endpoints = []
pubkey = "dW50cnVzdGVkIGNvbW1lbnQ6IG1pbmlzaWduIHB1YmxpYyBrZXk6IDkyMjAzMkU2Q0ZGQjQ0MjYKUldRbVJQdlA1aklna2d2NnRoM3ZsT3lzWEQ3MC9zTGpaWVR4NGdQOXR0UGJaOHBlY2xCcFY5bHcK"

[app.security]
